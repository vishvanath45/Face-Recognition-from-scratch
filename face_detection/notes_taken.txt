https://docs.google.com/document/d/1-hsZPnnRyWBTOVZgMjH8TveTik0oSThJtegtndBzZX8/edit


-------
https://facedetection.com/datasets/

https://medium.com/@ageitgey/machine-learning-is-fun-80ea3ec3c471

#1-> 
https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78

Lana del ray ->
https://www.youtube.com/watch?v=eP4eqhWc7sI&index=4&list=RDEMYGj5tu94_mNz6SrYkDD3_g
----------
Part 4 is face detection

https://medium.com/@ageitgey

Whole series is good.

---
http://vintage.winklerbros.net/facescrub.html
Requested data from here, more data cleaning steps given---

http://web.archive.org/web/20070621092425/http:/www.ient.rwth-aachen.de/forschung/bebi/facedetection/publi/men99b.pdf

---

https://konghq.com/blog/list-of-10-face-detection-recognition-apis/

---

https://cmusatyalab.github.io/openface/

---
https://www.kairos.com/blog/face-recognition-kairos-vs-microsoft-vs-google-vs-amazon-vs-opencv

---
something good is here.
http://hanzratech.in/2015/02/03/face-recognition-using-opencv.html

---
Indian movie film database
http://cvit.iiit.ac.in/projects/IMFDB/

If you use this dataset, please cite the following paper:

Shankar Setty, Moula Husain, Parisa Beham, Jyothi Gudavalli, Menaka Kandasamy, Radhesyam Vaddi, Vidyagouri Hemadri, J C Karure, Raja Raju, Rajan, Vijay Kumar and C V Jawahar. "Indian Movie Face Database: A Benchmark for Face Recognition Under Wide Variations"

National Conference on Computer Vision, Pattern Recognition, Image Processing and Graphics (NCVPRIPG), 2013.

---

http://ieeexplore.ieee.org/document/723445/
---

https://www.researchgate.net/post/Would_training_a_face_recognition_model_with_face_images_from_one_race_affect_test_results_of_another_race
---
http://www.iaeme.com/MasterAdmin/UploadFolder/FACE%20DETECTION%20AND%20RECOGNITION%20MODEL%20BASED%20ON%20SKIN%20COLOUR%5CFACE%20DETECTION%20AND%20RECOGNITION%20MODEL%20BASED%20ON%20SKIN%20COLOUR.pdf
---


accha so there is Dlib library working in face detection field, aldo there is HArr cascade too, but error rate is quite high.
*Code from here*
https://gist.github.com/ageitgey/1c1cb1c60ace321868f7410d48c228e1

---
#Dlib vs OpenCV

https://www.youtube.com/watch?v=LsK0hzcEyHI

The red boxes are dlib's face detector and the circles are from OpenCV's face detector.  Both run at the same speed and detect about the same number of true faces, but OpenCV has lots of false alarms.

---

https://stackoverflow.com/questions/40008806/how-to-save-crop-detected-faces-in-dlib-python

---
Colour was coming in blue

In python include the following line of code to convert your image from BGR to RGB

img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

---
How PCA recognises FACE
https://www.youtube.com/watch?v=SaEmG4wcFfg

step 1 : convert face images in Training set to face vectors

step 2: Normalise the Face Vector
	
	Normalising - remove common feacture from each image so each image shows its unique features
	the green bar here)
	Subtract avg face from each face.

step 3 reduce dimentiality of Traing set

step 4 calc eigen vector from covarience matrix

This was somethign goood, but today I am starting continuing from that medium article, so that is there 
--- 

Now, after isolating the things I have to detect images where face are not upright.

reading face landmark detection method.
---

face landmark detection-

---
https://stackoverflow.com/questions/32717426/how-to-save-image-with-detection-box-in-dlib
----

remember for aligned face + resizing it, nomo dataset me 151 images tak huwa h, toh next run from that. :/
---
face_align resize for people
error here. 131 is file name
131 97
Traceback (most recent call last):
  File "face_alignment.py", line 35, in <module>
    detected_faces = face_detector(image, 1)
---
If you are using matplotlib and want to show the image in your interactive notebook, try the following:

%pylab inline
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
img=mpimg.imread('your_image.png')
imgplot = plt.imshow(img)
plt.show()

---

